.include "T.dom"                         # domain of types
.include "M.dom"                         # domain of methods
.include "H.dom"                         # domain of allocation sites
.include "V.dom"                         # domain of variables
.include "F.dom"                         # domain of fields
.include "EH.dom"                        # domain of exception handlers
.include "I.dom"                         # domain of invoke statements 
.include "P.dom"                         # domain of program points 


relT(t:T) input
relM(m:M) input
relH(h:H) input
relV(v:V) input
relF(f:F) input
relEH(eh:EH) input
relI(i:I) input
relP(p:P) input

ExceptionType(t:T) input                 # Type t is an exception type
HT(h:H,t:T) input                        # Allocation site h as Type t
entryPtM(m:M) input                      # Entry point methods of the assembly.
PI(p:P,i:I) input                        # Connects program points that are invoke statements to corresponding entries in domI
VH(v:V,h:H)  input                       # Variable v may point to AllocSite h
FH(f:F,h:H)  input                       # Static field f may point to AllocSite h
HFH(h1:H,f:F,h2:H)  input                # Field f of object allocated at AllocSite h1 may point to AllocSite h2

VarEH(eh:EH,v:V)  input                  # ExceptionHandler eh has the formal paramter as Variable v
ThrowPV(m:M,p:P,v:V)  input              # Instruction p of Method m throws Variable v
FinalEH(eh:EH,t:T,p:P) input             # ExceptionHandler eh catches an exception of Type t thrown at Program point p.
EscapeMTP(m:M,t:T,p:P) input             # Exception of type t if thrown at Program Point p, escapes Method m.
NestedEH(m:M,eh1:EH,eh2:EH) input        # In method m, exception handler eh1 nests exception handler eh2.
OutermostEH(m:M,eh:EH) input             # In method m, exception handler eh is not nested within any other exception handler.
EnclosingEH(m:M,eh:EH,p:P) input         # In method m, exception handler eh immediately encloses program point p that could potentially throw.
NoEnclose(m:M,p:P) input
CallAt(m:M,p:P,mcallee:M) input

ExceptionObj(h:H) input
WrapsEx(h2:H,h1:H) input                 # Exception object h2 wraps exception object h1
MoveNextEH(m:M,eh:EH) input
LinkedEx(m1:M,v1:V,t1:T,m2:M,v2:V,t2:T) input
ThrowOrigin(m:M,p:P,v:V) input
ThrowSubsumed(eh:EH,m:M,p:P,v:V) input
ThrowRemaining(m:M,p:P,v:V) input
WEscapeRemaining(t:T,h:H) input

EscUnion(h:H)
ExcOrigin(m:M,v:V,h:H) printtuples
NotEscaping(t:T,h:H) printtuples
InfeasibleMTP(m:M,t:T,p:P) printtuples
LinkMatch(m1:M,v1:V,t1:T,m2:M,v2:V,t2:T) printtuples

ThrowPoint1(m:M,p:P,v:V) printtuples
ThrowPoint2(m:M,p:P,v:V) printtuples
ThrowPoint(m:M,p:P,v:V) printtuples
ThrowMH(m:M,h:H) printtuples             # The exception object h escapes Method m.
CatchVH(v:V,h:H) printtuples             # Variable v which is the formal parameter of some catch handler, points-to exception object h.
FeasibleMTP(m:M,t:T,p:P) printtuples
FeasibleEH(m:M,eh:EH) printtuples
WEscape1(t:T,h:H) printtuples
WEscape2(t:T,h:H) printtuples
WEscape3(t:T,h:H) printtuples
WEscape4(t:T,h:H) printtuples
Caught(t:T,h:H) printtuples              # h is an exception object of Type t that is caught somewhere within the application
Escaping(t:T,h:H) printtuples            # h is an exception object of Type t that is escaping from the application
WEscaping(t:T,h:H) printtuples
OnlyWEscaping(t:T,h:H) printtuples
Infeasible(t:T,h:H) printtuples

# Rules

###########################################
# Computing exception flows.
###########################################

LinkMatch(m1,v1,t1,m2,v2,t2) :- CatchVH(v1,h1), LinkedEx(m1,v1,t1,m2,v2,t2), VH(v2,h2), WrapsEx(h2,h1), HT(h1,t1), HT(h2,t2).
ExcOrigin(m,v,h) :- ThrowPV(m,p,v), VH(v,h).

ThrowPoint1(m,p,v) :- ThrowOrigin(m,p,v).
ThrowPoint2(m,p,v) :- ThrowSubsumed(eh,m,p,v), VH(v,h), WrapsEx(h,h1), VarEH(eh,ehv), CatchVH(ehv,h1).  
ThrowPoint(m,p,v) :- ThrowPoint1(m,p,v).
ThrowPoint(m,p,v) :- ThrowPoint2(m,p,v).
ThrowPoint(m,p,v) :- ThrowRemaining(m,p,v).
ThrowMH(m,h) :- ThrowPoint(m,p,v), VH(v,h), HT(h,t), FeasibleMTP(m,t,p).
ThrowMH(m,h) :- CallAt(m,p,mcallee), ThrowMH(mcallee,h), HT(h,t), FeasibleMTP(m,t,p).
FeasibleMTP(m,t,p) :- EscapeMTP(m,t,p), NoEnclose(m,p).
FeasibleMTP(m,t,p) :- EscapeMTP(m,t,p), EnclosingEH(m,eh,p), FeasibleEH(m,eh).
FeasibleEH(m,eh) :- CatchVH(v,h), VarEH(eh,v), OutermostEH(m,eh).
FeasibleEH(m,eh) :- CatchVH(v,h), VarEH(eh,v), NestedEH(m,eh1,eh), FeasibleEH(m,eh1).
CatchVH(ehv,h) :- ThrowPoint(m,p,v), VH(v,h), HT(h,t), FinalEH(eh,t,p), VarEH(eh,ehv).
CatchVH(v,h) :- CallAt(m,p,mcallee), ThrowMH(mcallee,h), HT(h,t), FinalEH(eh,t,p), VarEH(eh,v).

WEscape1(t2,h2) :- WrapsEx(h1,h2), Escaping(t1,h1), LinkMatch(m2,v2,t2,m1,v1,t1), ExcOrigin(m1,v1,h1), HT(h2,t2).
WEscape2(t3,h3) :- WrapsEx(h2,h3), WEscaping(t2,h2), LinkMatch(m3,v3,t3,m2,v2,t2), ExcOrigin(m2,v2,h2), HT(h3,t3).
WEscape3(t2,h2) :- WrapsEx(h1,h2), Escaping(t1,h1), CatchVH(v2,h2), VarEH(eh2,v2), MoveNextEH(m,eh2), HT(h2,t2).
WEscape4(t3,h3) :- WrapsEx(h2,h3), WEscaping(t2,h2), CatchVH(v3,h3), VarEH(eh3,v3), MoveNextEH(m,eh3), HT(h3,t3).
Escaping(t,h) :- ThrowMH(m,h), HT(h,t), ExceptionType(t), entryPtM(m).
WEscaping(t,h) :- WEscape1(t,h). 
WEscaping(t,h) :- WEscape2(t,h). 
WEscaping(t,h) :- WEscape3(t,h). 
WEscaping(t,h) :- WEscape4(t,h). 
WEscaping(t,h) :- WEscapeRemaining(t,h). 

OnlyWEscaping(t2,h2) :- WEscaping(t2,h2), !Escaping(t2,h2).
EscUnion(h) :- Escaping(t,h).
EscUnion(h) :- WEscaping(t,h).
NotEscaping(t,h) :- !EscUnion(h), HT(h,t), ExceptionType(t).
Caught(t,h) :- CatchVH(v,h), NotEscaping(t,h).
InfeasibleMTP(m,t,p) :- !FeasibleMTP(m,t,p), EscapeMTP(m,t,p).
Infeasible(t,h) :- ThrowPoint(m,p,v), VH(v,h), HT(h,t), InfeasibleMTP(m,t,p).
Infeasible(t,h) :- CallAt(m,p,mcallee), ThrowMH(mcallee,h), HT(h,t), InfeasibleMTP(m,t,p).


.include "relT.datalog"
.include "relM.datalog"
.include "relH.datalog"
.include "relV.datalog"
.include "relF.datalog"
.include "relEH.datalog"
.include "relI.datalog"
.include "relP.datalog"
.include "ExceptionType.datalog"
.include "HT.datalog"
.include "entryPtM.datalog"
.include "MoveNextEH.datalog"
.include "VarEH.datalog"
.include "VH.datalog"
.include "FH.datalog"
.include "HFH.datalog"
.include "ThrowPV.datalog"
.include "PI.datalog"
.include "FinalEH.datalog"
.include "EscapeMTP.datalog"
.include "NestedEH.datalog"
.include "OutermostEH.datalog"
.include "EnclosingEH.datalog"
.include "NoEnclose.datalog"
.include "CallAt.datalog"
.include "LinkedEx.datalog"
.include "ThrowOrigin.datalog"
.include "ThrowSubsumed.datalog"
.include "ExceptionObj.datalog"
.include "WrapsEx.datalog"
.include "ThrowRemaining.datalog"
.include "WEscapeRemaining.datalog"
