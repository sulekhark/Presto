.include "T.dom"                         # domain of types
.include "M.dom"                         # domain of methods
.include "I.dom"                         # domain of invoke statements
.include "H.dom"                         # domain of allocation sites
.include "V.dom"                         # domain of variables
.include "P.dom"                         # domain of program points
.include "EH.dom"                        # domain of exception handlers
.include "N.dom"                         # domain of integer location values
.include "F.dom"                         # domain of fields

############
# Relations
############

relT(t:T) input
relM(m:M) input
relI(i:I) input
relH(h:H) input
relV(v:V) input
relP(p:P) input
relEH(eh:EH) input
relN(n:N) input
relF(f:F) input

HT(h:H,t:T) input                        # Allocation site h allocates an object of Type t
VarEH(eh:EH,v:V)  input                  # ExceptionHandler eh has the formal paramter as Variable v
ThrowPV(m:M,p:P,v:V)  input              # Instruction p of Method m throws Variable v
FinalEH(eh:EH,t:T,p:P) input             # ExceptionHandler eh catches an exception of Type t thrown at Program point p.
EscapeMTP(m:M,t:T,p:P) input             # Exception of type t if thrown at Program Point p, escapes Method m.
VH(v:V,h:H)  input                       # Variable v may point to AllocSite h
CallAt(m:M,p:P,mcallee:M) input
ThrowMH(m:M,h:H) input                   # The exception object h escapes Method m.
CatchVH(v:V,h:H) input                   # Variable v which is the formal parameter of some catch handler, points-to exception object h.
ExceptionType(t:T) input                 # Type t is an exception type
entryPtM(m:M) input                      # Entry point methods of the assembly.
LinkedEx(m1:M,v1:V,t1:T,m2:M,v2:V,t2:T) input
ExceptionObj(h:H) input
WrapsEx(h1:H,h2:H) input
Escaping(t:T,h:H) input
WEscaping(t2:T,h2:H) input
NestedEH(m:M,eh1:EH,eh2:EH) input        # In method m, exception handler eh1 nests exception handler eh2.
OutermostEH(m:M,eh:EH) input             # In method m, exception handler eh is not nested within any other exception handler.
EnclosingEH(m:M,eh:EH,p:P) input         # In method m, exception handler eh immediately encloses program point p that could potentially throw.
NoEnclose(m:M,p:P) input
FeasibleMTP(m:M,t:T,p:P) input
FeasibleEH(m:M,eh:EH) input
ThrowOrigin(m:M,p:P,v:V) input
ThrowSubsumed(eh:EH,m:M,p:P,v:V) input
ThrowPoint(m:M,p:P,v:V) input
ThrowPt1(m:M,p:P,v:V) input
ThrowPt2(m:M,p:P,v:V) input
ThrowPt3(m:M,p:P,v:V) input
ThrowPt4(m:M,p:P,v:V) input
ThrowRemaining(m:M,p:P,v:V) input
NotEscaping(t:T,h:H) input
InfeasibleMTP(m:M,t:T,p:P) input


NoDirectEsc(t:T,h:H)


########################
#Instrumented Relations
########################

ThrowSubsumed_i1(eh:EH,m:M,p:P,v2:V,v1:V,t1:T,t2:T) printtuples
ThrowPt1_i1(m:M,p:P,v:V) printtuples
ThrowPt2_i1(m:M,p:P,v:V,eh:EH,h:H,h1:H,ehv:V) printtuples
ThrowPt3_i1(m:M,p:P,v:V,eh:EH,h:H,h1:H,ehv:V) printtuples
ThrowPt4_i1(m:M,p:P,v:V,eh:EH,h:H,ehv:V) printtuples
ThrowPoint_i1(m:M,p:P,v:V) printtuples
ThrowPoint_i2(m:M,p:P,v:V) printtuples
ThrowPoint_i3(m:M,p:P,v:V) printtuples
ThrowPoint_i4(m:M,p:P,v:V) printtuples
ThrowPoint_i5(m:M,p:P,v:V) printtuples
ThrowMH_i1(m:M,h:H,p:P,v:V,t:T) printtuples
ThrowMH_i2(m:M,h:H,p:P,mcallee:M,t:T) printtuples
CatchVH_i1(ehv:V,h:H,m:M,p:P,v:V,t:T,eh:EH) printtuples
CatchVH_i2(v:V,h:H,m:M,p:P,mcallee:M,t:T,eh:EH) printtuples
FeasibleMTP_i1(m:M,t:T,p:P) printtuples
FeasibleMTP_i2(m:M,t:T,p:P,eh:EH) printtuples
FeasibleEH_i1(m:M,eh:EH,v:V,h:H) printtuples
FeasibleEH_i2(m:M,eh:EH,v:V,h:H,eh1:EH) printtuples
Escaping_i1(t:T,h:H,m:M) printtuples
WEscaping_i1(t:T,h:H) printtuples
WEscaping_i2(t:T,h:H) printtuples
OnlyWEscaping_i1(t2:T,h2:H) printtuples
Caught_i1(t:T,h:H,v:V) printtuples
Infeasible_i1(t:T,h:H,m:M,p:P,v:V) printtuples
Infeasible_i2(t:T,h:H,m:M,p:P,mcallee:M) printtuples


##################
# Argument Counts
##################

# ARG_COUNT ThrowSubsumed 4
# ARG_COUNT ThrowPt1 3
# ARG_COUNT ThrowPt2 3
# ARG_COUNT ThrowPt3 3
# ARG_COUNT ThrowPt4 3
# ARG_COUNT ThrowPoint 3
# ARG_COUNT ThrowMH 2
# ARG_COUNT CatchVH 2
# ARG_COUNT FeasibleMTP 3
# ARG_COUNT FeasibleEH 2
# ARG_COUNT Escaping 2
# ARG_COUNT WEscaping 2 
# ARG_COUNT OnlyWEscaping 2 
# ARG_COUNT Caught 2
# ARG_COUNT Infeasible 2



############################
# Instrumented Constraints
############################

ThrowSubsumed_i1(eh,m,p,v2,v1,t1,t2) :- MEH(m,eh), VarEH(eh,v1), LinkedEx(m,v1,t1,m,v2,t2), ThrowPV(m,p,v2).

ThrowPt1_i1(m,p,v) :- ThrowOrigin(m,p,v).
ThrowPt2_i1(m,p,v,eh,h,h1,ehv) :- ThrowSubsumed(eh,m,p,v), VH(v,h), WrapsEx(h,h1), VarEH(eh,ehv), CatchVH(ehv,h1).
ThrowPt3_i1(m,p,v,eh,h,h1,ehv) :- ThrowSubsumed(eh,m,p,v), VH(v,h1), WrapsEx(h,h1), VarEH(eh,ehv), CatchVH(ehv,h).
ThrowPt4_i1(m,p,v,eh,h,ehv) :- ThrowSubsumed(eh,m,p,v), VH(v,h), VarEH(eh,ehv), CatchVH(ehv,h).
ThrowPoint_i1(m,p,v) :- ThrowPt1(m,p,v).
ThrowPoint_i2(m,p,v) :- ThrowPt2(m,p,v).
ThrowPoint_i3(m,p,v) :- ThrowPt3(m,p,v).
ThrowPoint_i4(m,p,v) :- ThrowPt4(m,p,v).
ThrowPoint_i5(m,p,v) :- ThrowRemaining(m,p,v).

ThrowMH_i1(m,h,p,v,t) :- ThrowPoint(m,p,v), VH(v,h), HT(h,t), FeasibleMTP(m,t,p).
ThrowMH_i2(m,h,p,mcallee,t) :- CallAt(m,p,mcallee), ThrowMH(mcallee,h), HT(h,t), FeasibleMTP(m,t,p).
CatchVH_i1(ehv,h,m,p,v,t,eh) :- ThrowPoint(m,p,v), VH(v,h), HT(h,t), FinalEH(eh,t,p), VarEH(eh,ehv).
CatchVH_i2(v,h,m,p,mcallee,t,eh) :- CallAt(m,p,mcallee), ThrowMH(mcallee,h), HT(h,t), FinalEH(eh,t,p), VarEH(eh,v).
FeasibleMTP_i1(m,t,p) :- EscapeMTP(m,t,p), NoEnclose(m,p).
FeasibleMTP_i2(m,t,p,eh) :- EscapeMTP(m,t,p), EnclosingEH(m,eh,p), FeasibleEH(m,eh).
FeasibleEH_i1(m,eh,v,h) :- CatchVH(v,h), VarEH(eh,v), OutermostEH(m,eh).
FeasibleEH_i2(m,eh,v,h,eh1) :- CatchVH(v,h), VarEH(eh,v), NestedEH(m,eh1,eh), FeasibleEH(m,eh1).

Escaping_i1(t,h,m) :- ThrowMH(m,h), HT(h,t), ExceptionType(t), entryPtM(m).
WEscaping_i1(t2,h2,t1,h1,m2,v2,m1,v1) :- WrapsEx(h1,h2), Escaping(t1,h1).
WEscaping_i1(t3,h3,t2,h2,m3,v3,m2,v2) :- WrapsEx(h2,h3), WEscaping(t2,h2).

NoDirectEsc(t,h) :- !Escaping(t,h), ExceptionObj(h), ExceptionType(t).
OnlyWEscaping_i1(t2,h2) :- WEscaping(t2,h2), NoDirectEsc(t2,h2).
Caught_i1(t,h,v) :- CatchVH(v,h), NotEscaping(t,h).
Infeasible_i1(t,h,m,p,v) :- ThrowPoint(m,p,v), VH(v,h), HT(h,t), InfeasibleMTP(m,t,p).
Infeasible_i2(t,h,m,p,mcallee) :- CallAt(m,p,mcallee), ThrowMH(mcallee,h), HT(h,t), InfeasibleMTP(m,t,p).


.include "relT.datalog"
.include "relM.datalog"
.include "relI.datalog"
.include "relH.datalog"
.include "relV.datalog"
.include "relP.datalog"
.include "relEH.datalog"
.include "relN.datalog"
.include "relF.datalog"
.include "HT.datalog"
.include "VarEH.datalog"
.include "ThrowPV.datalog"
.include "FinalEH.datalog"
.include "EscapeMTP.datalog"
.include "VH.datalog"
.include "CallAt.datalog"
.include "ThrowMH.datalog"
.include "CatchVH.datalog"
.include "ExceptionType.datalog"
.include "entryPtM.datalog"
.include "LinkedEx.datalog"
.include "ExceptionObj.datalog"
.include "WrapsEx.datalog"
.include "Escaping.datalog"
.include "WEscaping.datalog"
.include "NestedEH.datalog"
.include "OutermostEH.datalog"
.include "EnclosingEH.datalog"
.include "NoEnclose.datalog"
.include "FeasibleMTP.datalog"
.include "FeasibleEH.datalog"
.include "ThrowOrigin.datalog"
.include "ThrowSubsumed.datalog"
.include "ThrowPoint.datalog"
.include "ThrowPt1.datalog"
.include "ThrowPt2.datalog"
.include "ThrowPt3.datalog"
.include "ThrowPt4.datalog"
.include "ThrowRemaining.datalog"
.include "NotEscaping.datalog"
.include "InfeasibleMTP.datalog"
