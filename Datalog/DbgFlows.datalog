.include "T.dom"                         # domain of types
.include "M.dom"                         # domain of methods
.include "H.dom"                         # domain of allocation sites
.include "V.dom"                         # domain of variables
.include "F.dom"
.include "P.dom"


relH(h:H) input
relT(t:T) input
relM(m:M) input
relV(v:V) input
relF(f:F) input
relP(p:P) input
ThrowMH(m:M,h:H) input                   # The exception object h escapes Method m.
CatchVH(v:V,h:H) input                   # Variable v which is the formal parameter of some catch handler, points-to exception object h.
ExceptionType(t:T) input                 # Type t is an exception type
HT(h:H,t:T) input                        # Allocation site h as Type t
entryPtM(m:M) input                      # Entry point methods of the assembly.
Caught(t:T,h:H) input                    # h is an exception object of Type t that is caught somewhere within the application
Escaping(t:T,h:H) input                  # h is an exception object of Type t that is escaping from the application
ThrowPV(m:M,p:P,v:V)  input              # Instruction p of Method m throws Variable v
HFH(h1:H,f:F,h2:H) input
VH(v:V,h:H)  input
FH(f:F,h:H) input
reachableM(m:M) input
MAlloc(m:M,v:V,h:H) input
VT(v:V,t:T) input
FT(f:F,t:T) input

Wrap(h1:H,f:F,h2:H)
CaughtOrEscaping(h:H)

ExcObject(h:H) printtuples
VExcH(h:H) printtuples
VExcT(t:T) printtuples
RAExc(h:H) printtuples
EscapingAny(t:T,h:H) printtuples
ThrownExcObject(h:H) printtuples
WrapOnly(h:H) printtuples
Missing(h:H) printtuples
EscObjType(t1:T,h:H,t2:T) printtuples
CaughtObjType(t1:T,h:H,t2:T) printtuples

# Rules
EscapingAny(t,h) :- ThrowMH(m,h), HT(h,t), ExceptionType(t).
ExcObject(h) :- HT(h,t), ExceptionType(t).
VExcH(h) :- VH(v,h), HT(h,t), ExceptionType(t).
VExcT(t) :- VH(v,h), HT(h,t), ExceptionType(t).
RAExc(h) :- reachableM(m), MAlloc(m,v,h), HT(h,t), ExceptionType(t).
ThrownExcObject(h) :- reachableM(m), ThrowPV(m,p,v), VH(v,h), HT(h,t), ExceptionType(t).

Wrap(h1,f,h2) :- HFH(h1,f,h2), HT(h1,t1), ExceptionType(t1), HT(h2,t2), ExceptionType(t2).
CaughtOrEscaping(h) :- Caught(t,h).
CaughtOrEscaping(h) :- Escaping(t,h). 
WrapOnly(h2) :- Wrap(h1,f,h2), CaughtOrEscaping(h1), !CaughtOrEscaping(h2), HT(h2,t), ExceptionType(t).
Missing(h) :- !CaughtOrEscaping(h), VExcH(h), HT(h,t), ExceptionType(t).

EscObjType(t1,h,t2) :- Escaping(t1,h), VH(v,h), VT(v,t2).
EscObjType(t1,h,t2) :- Escaping(t1,h), FH(f,h), FT(f,t2).
EscObjType(t1,h,t2) :- Escaping(t1,h), HFH(h0,f,h), FT(f,t2).
CaughtObjType(t1,h,t2) :- Caught(t1,h), VH(v,h), VT(v,t2).
CaughtObjType(t1,h,t2) :- Caught(t1,h), FH(f,h), FT(f,t2).
CaughtObjType(t1,h,t2) :- Caught(t1,h), HFH(h0,f,h), FT(f,t2).


.include "relH.datalog"
.include "relT.datalog"
.include "relM.datalog"
.include "relV.datalog"
.include "relF.datalog"
.include "relP.datalog"
.include "ThrowMH.datalog"
.include "CatchVH.datalog"
.include "ExceptionType.datalog"
.include "HT.datalog"
.include "entryPtM.datalog"
.include "reachableM.datalog"
.include "MAlloc.datalog"
.include "VH.datalog"
.include "HFH.datalog"
.include "FH.datalog"
.include "ThrowPV.datalog"
.include "Caught.datalog"
.include "Escaping.datalog"
.include "VT.datalog"
.include "FT.datalog"
